* homework

  written part is graded, programs this weekend
  graded as 3 parts: grammar 50%, first/follow 25%, parse table 25%
  grammar wrong => half credit for doing the other bits

  _most issues were due to hard to trace follow sets_

* fn grammar

   expr := abs | app | id
   app  := expr '(' expr ')'
   abs  := fn '(' id ')' '{' expr '}'
   id   := [a-z]([a-z0-9])*

   ->

   expr := abs | app | var
   app  := expr '(' expr ')'
   abs  := fn '(' t var ')' '{' expr '}'
   var  := [a-z]([a-z0-9])*
   t    := 'int' | t '->' t
   int  := [1-9]([0-9])*

* example expressions
** simple type

   fn(int t) {
     t
   }

** complex type

   fn(int -> int t) {
     t(1)
   }

** combination

   fn(int -> int t) {
     t(1)
   }(fn{int t){
     t
   })

* javacc grammar

  review fn.jj

* jtb build

  who has found jtb?
  who has downloaded it/tried it?

  http://compilers.cs.ucla.edu/jtb/
  http://compilers.cs.ucla.edu/jtb/jtb-2003/docs.html

  java -jar jtb132.jar fn.jj -o jtb.out.jj
  javacc jtb.out.jj

* type rules

  abs, app, var, int

* derivations

  app, failure

* type checking in java

  TypeVisitor.java
